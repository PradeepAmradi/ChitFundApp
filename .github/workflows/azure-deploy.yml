name: Azure Backend Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'shared/**'
      - 'Dockerfile'
      - '.github/workflows/azure-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'shared/**'
      - 'Dockerfile'
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}
  IMAGE_NAME: chitfund-backend
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Build backend fat JAR
      run: ./gradlew :backend:buildFatJar
      
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Backend-JAR
        path: backend/build/libs/*.jar
        retention-days: 1

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: Backend-JAR
        path: backend/build/libs/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    
    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest'
    
    - name: Restart Azure Web App
      run: |
        az webapp restart \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
    
    - name: Check deployment status
      run: |
        echo "üöÄ Deployment completed!"
        echo "üåê App URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        echo "üìã Checking app health..."
        
        # Wait a moment for the app to start
        sleep 30
        
        # Basic health check
        if curl -f -s "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net" > /dev/null; then
          echo "‚úÖ App is responding!"
        else
          echo "‚ö†Ô∏è App may still be starting up. Check the Azure portal for detailed logs."
        fi